//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace WcfSSO
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class physical_SSOEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“physical_SSOEntities”部分中的连接字符串初始化新 physical_SSOEntities 对象。
        /// </summary>
        public physical_SSOEntities() : base("name=physical_SSOEntities", "physical_SSOEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 physical_SSOEntities 对象。
        /// </summary>
        public physical_SSOEntities(string connectionString) : base(connectionString, "physical_SSOEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 physical_SSOEntities 对象。
        /// </summary>
        public physical_SSOEntities(EntityConnection connection) : base(connection, "physical_SSOEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TACCESSCONTROL> TACCESSCONTROL
        {
            get
            {
                if ((_TACCESSCONTROL == null))
                {
                    _TACCESSCONTROL = base.CreateObjectSet<TACCESSCONTROL>("TACCESSCONTROL");
                }
                return _TACCESSCONTROL;
            }
        }
        private ObjectSet<TACCESSCONTROL> _TACCESSCONTROL;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TANNUALLEAVE> TANNUALLEAVE
        {
            get
            {
                if ((_TANNUALLEAVE == null))
                {
                    _TANNUALLEAVE = base.CreateObjectSet<TANNUALLEAVE>("TANNUALLEAVE");
                }
                return _TANNUALLEAVE;
            }
        }
        private ObjectSet<TANNUALLEAVE> _TANNUALLEAVE;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TCENTERINFO> TCENTERINFO
        {
            get
            {
                if ((_TCENTERINFO == null))
                {
                    _TCENTERINFO = base.CreateObjectSet<TCENTERINFO>("TCENTERINFO");
                }
                return _TCENTERINFO;
            }
        }
        private ObjectSet<TCENTERINFO> _TCENTERINFO;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TSYSTEMCONTROL> TSYSTEMCONTROL
        {
            get
            {
                if ((_TSYSTEMCONTROL == null))
                {
                    _TSYSTEMCONTROL = base.CreateObjectSet<TSYSTEMCONTROL>("TSYSTEMCONTROL");
                }
                return _TSYSTEMCONTROL;
            }
        }
        private ObjectSet<TSYSTEMCONTROL> _TSYSTEMCONTROL;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TSYSTEMINFO> TSYSTEMINFO
        {
            get
            {
                if ((_TSYSTEMINFO == null))
                {
                    _TSYSTEMINFO = base.CreateObjectSet<TSYSTEMINFO>("TSYSTEMINFO");
                }
                return _TSYSTEMINFO;
            }
        }
        private ObjectSet<TSYSTEMINFO> _TSYSTEMINFO;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TIPLIST> TIPLIST
        {
            get
            {
                if ((_TIPLIST == null))
                {
                    _TIPLIST = base.CreateObjectSet<TIPLIST>("TIPLIST");
                }
                return _TIPLIST;
            }
        }
        private ObjectSet<TIPLIST> _TIPLIST;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TEMPLOYEEINFO> TEMPLOYEEINFO
        {
            get
            {
                if ((_TEMPLOYEEINFO == null))
                {
                    _TEMPLOYEEINFO = base.CreateObjectSet<TEMPLOYEEINFO>("TEMPLOYEEINFO");
                }
                return _TEMPLOYEEINFO;
            }
        }
        private ObjectSet<TEMPLOYEEINFO> _TEMPLOYEEINFO;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TUSERGROUP> TUSERGROUP
        {
            get
            {
                if ((_TUSERGROUP == null))
                {
                    _TUSERGROUP = base.CreateObjectSet<TUSERGROUP>("TUSERGROUP");
                }
                return _TUSERGROUP;
            }
        }
        private ObjectSet<TUSERGROUP> _TUSERGROUP;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 TACCESSCONTROL EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTACCESSCONTROL(TACCESSCONTROL tACCESSCONTROL)
        {
            base.AddObject("TACCESSCONTROL", tACCESSCONTROL);
        }
    
        /// <summary>
        /// 用于向 TANNUALLEAVE EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTANNUALLEAVE(TANNUALLEAVE tANNUALLEAVE)
        {
            base.AddObject("TANNUALLEAVE", tANNUALLEAVE);
        }
    
        /// <summary>
        /// 用于向 TCENTERINFO EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTCENTERINFO(TCENTERINFO tCENTERINFO)
        {
            base.AddObject("TCENTERINFO", tCENTERINFO);
        }
    
        /// <summary>
        /// 用于向 TSYSTEMCONTROL EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTSYSTEMCONTROL(TSYSTEMCONTROL tSYSTEMCONTROL)
        {
            base.AddObject("TSYSTEMCONTROL", tSYSTEMCONTROL);
        }
    
        /// <summary>
        /// 用于向 TSYSTEMINFO EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTSYSTEMINFO(TSYSTEMINFO tSYSTEMINFO)
        {
            base.AddObject("TSYSTEMINFO", tSYSTEMINFO);
        }
    
        /// <summary>
        /// 用于向 TIPLIST EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTIPLIST(TIPLIST tIPLIST)
        {
            base.AddObject("TIPLIST", tIPLIST);
        }
    
        /// <summary>
        /// 用于向 TEMPLOYEEINFO EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTEMPLOYEEINFO(TEMPLOYEEINFO tEMPLOYEEINFO)
        {
            base.AddObject("TEMPLOYEEINFO", tEMPLOYEEINFO);
        }
    
        /// <summary>
        /// 用于向 TUSERGROUP EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTUSERGROUP(TUSERGROUP tUSERGROUP)
        {
            base.AddObject("TUSERGROUP", tUSERGROUP);
        }

        #endregion

        #region 函数导入
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        /// <param name="pCount">没有元数据文档可用。</param>
        /// <param name="rCount">没有元数据文档可用。</param>
        /// <param name="pFEMPLOYEE">没有元数据文档可用。</param>
        /// <param name="pFNAME">没有元数据文档可用。</param>
        /// <param name="pFID">没有元数据文档可用。</param>
        /// <param name="pFCONTACT">没有元数据文档可用。</param>
        /// <param name="pFGROUP">没有元数据文档可用。</param>
        /// <param name="pFROLEID">没有元数据文档可用。</param>
        /// <param name="pFSTATUS">没有元数据文档可用。</param>
        /// <param name="pFINDATE1">没有元数据文档可用。</param>
        /// <param name="pFINDATE2">没有元数据文档可用。</param>
        /// <param name="sys_Begin">没有元数据文档可用。</param>
        /// <param name="sys_PageIndex">没有元数据文档可用。</param>
        /// <param name="sys_PageSize">没有元数据文档可用。</param>
        public int proc_employee_paginator_count(ObjectParameter pCount, ObjectParameter rCount, global::System.String pFEMPLOYEE, global::System.String pFNAME, global::System.String pFID, global::System.String pFCONTACT, global::System.String pFGROUP, Nullable<global::System.Int32> pFROLEID, Nullable<global::System.Int32> pFSTATUS, global::System.String pFINDATE1, global::System.String pFINDATE2, Nullable<global::System.Int32> sys_Begin, Nullable<global::System.Int32> sys_PageIndex, Nullable<global::System.Int32> sys_PageSize)
        {
            ObjectParameter pFEMPLOYEEParameter;
            if (pFEMPLOYEE != null)
            {
                pFEMPLOYEEParameter = new ObjectParameter("pFEMPLOYEE", pFEMPLOYEE);
            }
            else
            {
                pFEMPLOYEEParameter = new ObjectParameter("pFEMPLOYEE", typeof(global::System.String));
            }
    
            ObjectParameter pFNAMEParameter;
            if (pFNAME != null)
            {
                pFNAMEParameter = new ObjectParameter("pFNAME", pFNAME);
            }
            else
            {
                pFNAMEParameter = new ObjectParameter("pFNAME", typeof(global::System.String));
            }
    
            ObjectParameter pFIDParameter;
            if (pFID != null)
            {
                pFIDParameter = new ObjectParameter("pFID", pFID);
            }
            else
            {
                pFIDParameter = new ObjectParameter("pFID", typeof(global::System.String));
            }
    
            ObjectParameter pFCONTACTParameter;
            if (pFCONTACT != null)
            {
                pFCONTACTParameter = new ObjectParameter("pFCONTACT", pFCONTACT);
            }
            else
            {
                pFCONTACTParameter = new ObjectParameter("pFCONTACT", typeof(global::System.String));
            }
    
            ObjectParameter pFGROUPParameter;
            if (pFGROUP != null)
            {
                pFGROUPParameter = new ObjectParameter("pFGROUP", pFGROUP);
            }
            else
            {
                pFGROUPParameter = new ObjectParameter("pFGROUP", typeof(global::System.String));
            }
    
            ObjectParameter pFROLEIDParameter;
            if (pFROLEID.HasValue)
            {
                pFROLEIDParameter = new ObjectParameter("pFROLEID", pFROLEID);
            }
            else
            {
                pFROLEIDParameter = new ObjectParameter("pFROLEID", typeof(global::System.Int32));
            }
    
            ObjectParameter pFSTATUSParameter;
            if (pFSTATUS.HasValue)
            {
                pFSTATUSParameter = new ObjectParameter("pFSTATUS", pFSTATUS);
            }
            else
            {
                pFSTATUSParameter = new ObjectParameter("pFSTATUS", typeof(global::System.Int32));
            }
    
            ObjectParameter pFINDATE1Parameter;
            if (pFINDATE1 != null)
            {
                pFINDATE1Parameter = new ObjectParameter("pFINDATE1", pFINDATE1);
            }
            else
            {
                pFINDATE1Parameter = new ObjectParameter("pFINDATE1", typeof(global::System.String));
            }
    
            ObjectParameter pFINDATE2Parameter;
            if (pFINDATE2 != null)
            {
                pFINDATE2Parameter = new ObjectParameter("pFINDATE2", pFINDATE2);
            }
            else
            {
                pFINDATE2Parameter = new ObjectParameter("pFINDATE2", typeof(global::System.String));
            }
    
            ObjectParameter sys_BeginParameter;
            if (sys_Begin.HasValue)
            {
                sys_BeginParameter = new ObjectParameter("sys_Begin", sys_Begin);
            }
            else
            {
                sys_BeginParameter = new ObjectParameter("sys_Begin", typeof(global::System.Int32));
            }
    
            ObjectParameter sys_PageIndexParameter;
            if (sys_PageIndex.HasValue)
            {
                sys_PageIndexParameter = new ObjectParameter("sys_PageIndex", sys_PageIndex);
            }
            else
            {
                sys_PageIndexParameter = new ObjectParameter("sys_PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter sys_PageSizeParameter;
            if (sys_PageSize.HasValue)
            {
                sys_PageSizeParameter = new ObjectParameter("sys_PageSize", sys_PageSize);
            }
            else
            {
                sys_PageSizeParameter = new ObjectParameter("sys_PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("proc_employee_paginator_count", pCount, rCount, pFEMPLOYEEParameter, pFNAMEParameter, pFIDParameter, pFCONTACTParameter, pFGROUPParameter, pFROLEIDParameter, pFSTATUSParameter, pFINDATE1Parameter, pFINDATE2Parameter, sys_BeginParameter, sys_PageIndexParameter, sys_PageSizeParameter);
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        /// <param name="pCount">没有元数据文档可用。</param>
        /// <param name="rCount">没有元数据文档可用。</param>
        /// <param name="pFEMPLOYEE">没有元数据文档可用。</param>
        /// <param name="pFNAME">没有元数据文档可用。</param>
        /// <param name="pFID">没有元数据文档可用。</param>
        /// <param name="pFCONTACT">没有元数据文档可用。</param>
        /// <param name="pFGROUP">没有元数据文档可用。</param>
        /// <param name="pFROLEID">没有元数据文档可用。</param>
        /// <param name="pFSTATUS">没有元数据文档可用。</param>
        /// <param name="pFINDATE1">没有元数据文档可用。</param>
        /// <param name="pFINDATE2">没有元数据文档可用。</param>
        /// <param name="sys_Begin">没有元数据文档可用。</param>
        /// <param name="sys_PageIndex">没有元数据文档可用。</param>
        /// <param name="sys_PageSize">没有元数据文档可用。</param>
        public ObjectResult<TEMPLOYEEINFO> proc_employee_paginator(ObjectParameter pCount, ObjectParameter rCount, global::System.String pFEMPLOYEE, global::System.String pFNAME, global::System.String pFID, global::System.String pFCONTACT, global::System.String pFGROUP, Nullable<global::System.Int32> pFROLEID, Nullable<global::System.Int32> pFSTATUS, global::System.String pFINDATE1, global::System.String pFINDATE2, Nullable<global::System.Int32> sys_Begin, Nullable<global::System.Int32> sys_PageIndex, Nullable<global::System.Int32> sys_PageSize)
        {
            ObjectParameter pFEMPLOYEEParameter;
            if (pFEMPLOYEE != null)
            {
                pFEMPLOYEEParameter = new ObjectParameter("pFEMPLOYEE", pFEMPLOYEE);
            }
            else
            {
                pFEMPLOYEEParameter = new ObjectParameter("pFEMPLOYEE", typeof(global::System.String));
            }
    
            ObjectParameter pFNAMEParameter;
            if (pFNAME != null)
            {
                pFNAMEParameter = new ObjectParameter("pFNAME", pFNAME);
            }
            else
            {
                pFNAMEParameter = new ObjectParameter("pFNAME", typeof(global::System.String));
            }
    
            ObjectParameter pFIDParameter;
            if (pFID != null)
            {
                pFIDParameter = new ObjectParameter("pFID", pFID);
            }
            else
            {
                pFIDParameter = new ObjectParameter("pFID", typeof(global::System.String));
            }
    
            ObjectParameter pFCONTACTParameter;
            if (pFCONTACT != null)
            {
                pFCONTACTParameter = new ObjectParameter("pFCONTACT", pFCONTACT);
            }
            else
            {
                pFCONTACTParameter = new ObjectParameter("pFCONTACT", typeof(global::System.String));
            }
    
            ObjectParameter pFGROUPParameter;
            if (pFGROUP != null)
            {
                pFGROUPParameter = new ObjectParameter("pFGROUP", pFGROUP);
            }
            else
            {
                pFGROUPParameter = new ObjectParameter("pFGROUP", typeof(global::System.String));
            }
    
            ObjectParameter pFROLEIDParameter;
            if (pFROLEID.HasValue)
            {
                pFROLEIDParameter = new ObjectParameter("pFROLEID", pFROLEID);
            }
            else
            {
                pFROLEIDParameter = new ObjectParameter("pFROLEID", typeof(global::System.Int32));
            }
    
            ObjectParameter pFSTATUSParameter;
            if (pFSTATUS.HasValue)
            {
                pFSTATUSParameter = new ObjectParameter("pFSTATUS", pFSTATUS);
            }
            else
            {
                pFSTATUSParameter = new ObjectParameter("pFSTATUS", typeof(global::System.Int32));
            }
    
            ObjectParameter pFINDATE1Parameter;
            if (pFINDATE1 != null)
            {
                pFINDATE1Parameter = new ObjectParameter("pFINDATE1", pFINDATE1);
            }
            else
            {
                pFINDATE1Parameter = new ObjectParameter("pFINDATE1", typeof(global::System.String));
            }
    
            ObjectParameter pFINDATE2Parameter;
            if (pFINDATE2 != null)
            {
                pFINDATE2Parameter = new ObjectParameter("pFINDATE2", pFINDATE2);
            }
            else
            {
                pFINDATE2Parameter = new ObjectParameter("pFINDATE2", typeof(global::System.String));
            }
    
            ObjectParameter sys_BeginParameter;
            if (sys_Begin.HasValue)
            {
                sys_BeginParameter = new ObjectParameter("sys_Begin", sys_Begin);
            }
            else
            {
                sys_BeginParameter = new ObjectParameter("sys_Begin", typeof(global::System.Int32));
            }
    
            ObjectParameter sys_PageIndexParameter;
            if (sys_PageIndex.HasValue)
            {
                sys_PageIndexParameter = new ObjectParameter("sys_PageIndex", sys_PageIndex);
            }
            else
            {
                sys_PageIndexParameter = new ObjectParameter("sys_PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter sys_PageSizeParameter;
            if (sys_PageSize.HasValue)
            {
                sys_PageSizeParameter = new ObjectParameter("sys_PageSize", sys_PageSize);
            }
            else
            {
                sys_PageSizeParameter = new ObjectParameter("sys_PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TEMPLOYEEINFO>("proc_employee_paginator", pCount, rCount, pFEMPLOYEEParameter, pFNAMEParameter, pFIDParameter, pFCONTACTParameter, pFGROUPParameter, pFROLEIDParameter, pFSTATUSParameter, pFINDATE1Parameter, pFINDATE2Parameter, sys_BeginParameter, sys_PageIndexParameter, sys_PageSizeParameter);
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="pCount">没有元数据文档可用。</param>
        /// <param name="rCount">没有元数据文档可用。</param>
        /// <param name="pFEMPLOYEE">没有元数据文档可用。</param>
        /// <param name="pFNAME">没有元数据文档可用。</param>
        /// <param name="pFID">没有元数据文档可用。</param>
        /// <param name="pFCONTACT">没有元数据文档可用。</param>
        /// <param name="pFGROUP">没有元数据文档可用。</param>
        /// <param name="pFROLEID">没有元数据文档可用。</param>
        /// <param name="pFSTATUS">没有元数据文档可用。</param>
        /// <param name="pFINDATE1">没有元数据文档可用。</param>
        /// <param name="pFINDATE2">没有元数据文档可用。</param>
        /// <param name="sys_Begin">没有元数据文档可用。</param>
        /// <param name="sys_PageIndex">没有元数据文档可用。</param>
        /// <param name="sys_PageSize">没有元数据文档可用。</param>
        public ObjectResult<TEMPLOYEEINFO> proc_employee_paginator(ObjectParameter pCount, ObjectParameter rCount, global::System.String pFEMPLOYEE, global::System.String pFNAME, global::System.String pFID, global::System.String pFCONTACT, global::System.String pFGROUP, Nullable<global::System.Int32> pFROLEID, Nullable<global::System.Int32> pFSTATUS, global::System.String pFINDATE1, global::System.String pFINDATE2, Nullable<global::System.Int32> sys_Begin, Nullable<global::System.Int32> sys_PageIndex, Nullable<global::System.Int32> sys_PageSize, MergeOption mergeOption)
        {
            ObjectParameter pFEMPLOYEEParameter;
            if (pFEMPLOYEE != null)
            {
                pFEMPLOYEEParameter = new ObjectParameter("pFEMPLOYEE", pFEMPLOYEE);
            }
            else
            {
                pFEMPLOYEEParameter = new ObjectParameter("pFEMPLOYEE", typeof(global::System.String));
            }
    
            ObjectParameter pFNAMEParameter;
            if (pFNAME != null)
            {
                pFNAMEParameter = new ObjectParameter("pFNAME", pFNAME);
            }
            else
            {
                pFNAMEParameter = new ObjectParameter("pFNAME", typeof(global::System.String));
            }
    
            ObjectParameter pFIDParameter;
            if (pFID != null)
            {
                pFIDParameter = new ObjectParameter("pFID", pFID);
            }
            else
            {
                pFIDParameter = new ObjectParameter("pFID", typeof(global::System.String));
            }
    
            ObjectParameter pFCONTACTParameter;
            if (pFCONTACT != null)
            {
                pFCONTACTParameter = new ObjectParameter("pFCONTACT", pFCONTACT);
            }
            else
            {
                pFCONTACTParameter = new ObjectParameter("pFCONTACT", typeof(global::System.String));
            }
    
            ObjectParameter pFGROUPParameter;
            if (pFGROUP != null)
            {
                pFGROUPParameter = new ObjectParameter("pFGROUP", pFGROUP);
            }
            else
            {
                pFGROUPParameter = new ObjectParameter("pFGROUP", typeof(global::System.String));
            }
    
            ObjectParameter pFROLEIDParameter;
            if (pFROLEID.HasValue)
            {
                pFROLEIDParameter = new ObjectParameter("pFROLEID", pFROLEID);
            }
            else
            {
                pFROLEIDParameter = new ObjectParameter("pFROLEID", typeof(global::System.Int32));
            }
    
            ObjectParameter pFSTATUSParameter;
            if (pFSTATUS.HasValue)
            {
                pFSTATUSParameter = new ObjectParameter("pFSTATUS", pFSTATUS);
            }
            else
            {
                pFSTATUSParameter = new ObjectParameter("pFSTATUS", typeof(global::System.Int32));
            }
    
            ObjectParameter pFINDATE1Parameter;
            if (pFINDATE1 != null)
            {
                pFINDATE1Parameter = new ObjectParameter("pFINDATE1", pFINDATE1);
            }
            else
            {
                pFINDATE1Parameter = new ObjectParameter("pFINDATE1", typeof(global::System.String));
            }
    
            ObjectParameter pFINDATE2Parameter;
            if (pFINDATE2 != null)
            {
                pFINDATE2Parameter = new ObjectParameter("pFINDATE2", pFINDATE2);
            }
            else
            {
                pFINDATE2Parameter = new ObjectParameter("pFINDATE2", typeof(global::System.String));
            }
    
            ObjectParameter sys_BeginParameter;
            if (sys_Begin.HasValue)
            {
                sys_BeginParameter = new ObjectParameter("sys_Begin", sys_Begin);
            }
            else
            {
                sys_BeginParameter = new ObjectParameter("sys_Begin", typeof(global::System.Int32));
            }
    
            ObjectParameter sys_PageIndexParameter;
            if (sys_PageIndex.HasValue)
            {
                sys_PageIndexParameter = new ObjectParameter("sys_PageIndex", sys_PageIndex);
            }
            else
            {
                sys_PageIndexParameter = new ObjectParameter("sys_PageIndex", typeof(global::System.Int32));
            }
    
            ObjectParameter sys_PageSizeParameter;
            if (sys_PageSize.HasValue)
            {
                sys_PageSizeParameter = new ObjectParameter("sys_PageSize", sys_PageSize);
            }
            else
            {
                sys_PageSizeParameter = new ObjectParameter("sys_PageSize", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TEMPLOYEEINFO>("proc_employee_paginator", mergeOption, pCount, rCount, pFEMPLOYEEParameter, pFNAMEParameter, pFIDParameter, pFCONTACTParameter, pFGROUPParameter, pFROLEIDParameter, pFSTATUSParameter, pFINDATE1Parameter, pFINDATE2Parameter, sys_BeginParameter, sys_PageIndexParameter, sys_PageSizeParameter);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TACCESSCONTROL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TACCESSCONTROL : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TACCESSCONTROL 对象。
        /// </summary>
        /// <param name="fEMPLOYEE">FEMPLOYEE 属性的初始值。</param>
        /// <param name="fID">FID 属性的初始值。</param>
        public static TACCESSCONTROL CreateTACCESSCONTROL(global::System.String fEMPLOYEE, global::System.Int32 fID)
        {
            TACCESSCONTROL tACCESSCONTROL = new TACCESSCONTROL();
            tACCESSCONTROL.FEMPLOYEE = fEMPLOYEE;
            tACCESSCONTROL.FID = fID;
            return tACCESSCONTROL;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FEMPLOYEE
        {
            get
            {
                return _FEMPLOYEE;
            }
            set
            {
                OnFEMPLOYEEChanging(value);
                ReportPropertyChanging("FEMPLOYEE");
                _FEMPLOYEE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FEMPLOYEE");
                OnFEMPLOYEEChanged();
            }
        }
        private global::System.String _FEMPLOYEE;
        partial void OnFEMPLOYEEChanging(global::System.String value);
        partial void OnFEMPLOYEEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FACCESS
        {
            get
            {
                return _FACCESS;
            }
            set
            {
                OnFACCESSChanging(value);
                ReportPropertyChanging("FACCESS");
                _FACCESS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FACCESS");
                OnFACCESSChanged();
            }
        }
        private global::System.String _FACCESS;
        partial void OnFACCESSChanging(global::System.String value);
        partial void OnFACCESSChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FID
        {
            get
            {
                return _FID;
            }
            set
            {
                if (_FID != value)
                {
                    OnFIDChanging(value);
                    ReportPropertyChanging("FID");
                    _FID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FID");
                    OnFIDChanged();
                }
            }
        }
        private global::System.Int32 _FID;
        partial void OnFIDChanging(global::System.Int32 value);
        partial void OnFIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TANNUALLEAVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TANNUALLEAVE : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TANNUALLEAVE 对象。
        /// </summary>
        /// <param name="fLEVEL">FLEVEL 属性的初始值。</param>
        /// <param name="fID">FID 属性的初始值。</param>
        public static TANNUALLEAVE CreateTANNUALLEAVE(global::System.String fLEVEL, global::System.Int32 fID)
        {
            TANNUALLEAVE tANNUALLEAVE = new TANNUALLEAVE();
            tANNUALLEAVE.FLEVEL = fLEVEL;
            tANNUALLEAVE.FID = fID;
            return tANNUALLEAVE;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FLEVEL
        {
            get
            {
                return _FLEVEL;
            }
            set
            {
                OnFLEVELChanging(value);
                ReportPropertyChanging("FLEVEL");
                _FLEVEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FLEVEL");
                OnFLEVELChanged();
            }
        }
        private global::System.String _FLEVEL;
        partial void OnFLEVELChanging(global::System.String value);
        partial void OnFLEVELChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FDAYS
        {
            get
            {
                return _FDAYS;
            }
            set
            {
                OnFDAYSChanging(value);
                ReportPropertyChanging("FDAYS");
                _FDAYS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FDAYS");
                OnFDAYSChanged();
            }
        }
        private Nullable<global::System.Int32> _FDAYS;
        partial void OnFDAYSChanging(Nullable<global::System.Int32> value);
        partial void OnFDAYSChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FID
        {
            get
            {
                return _FID;
            }
            set
            {
                if (_FID != value)
                {
                    OnFIDChanging(value);
                    ReportPropertyChanging("FID");
                    _FID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FID");
                    OnFIDChanged();
                }
            }
        }
        private global::System.Int32 _FID;
        partial void OnFIDChanging(global::System.Int32 value);
        partial void OnFIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TCENTERINFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TCENTERINFO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TCENTERINFO 对象。
        /// </summary>
        /// <param name="fCENTERNO">FCENTERNO 属性的初始值。</param>
        /// <param name="fACTIVE">FACTIVE 属性的初始值。</param>
        public static TCENTERINFO CreateTCENTERINFO(global::System.String fCENTERNO, global::System.Decimal fACTIVE)
        {
            TCENTERINFO tCENTERINFO = new TCENTERINFO();
            tCENTERINFO.FCENTERNO = fCENTERNO;
            tCENTERINFO.FACTIVE = fACTIVE;
            return tCENTERINFO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FCENTERNO
        {
            get
            {
                return _FCENTERNO;
            }
            set
            {
                if (_FCENTERNO != value)
                {
                    OnFCENTERNOChanging(value);
                    ReportPropertyChanging("FCENTERNO");
                    _FCENTERNO = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FCENTERNO");
                    OnFCENTERNOChanged();
                }
            }
        }
        private global::System.String _FCENTERNO;
        partial void OnFCENTERNOChanging(global::System.String value);
        partial void OnFCENTERNOChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FCENTERNAME
        {
            get
            {
                return _FCENTERNAME;
            }
            set
            {
                OnFCENTERNAMEChanging(value);
                ReportPropertyChanging("FCENTERNAME");
                _FCENTERNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FCENTERNAME");
                OnFCENTERNAMEChanged();
            }
        }
        private global::System.String _FCENTERNAME;
        partial void OnFCENTERNAMEChanging(global::System.String value);
        partial void OnFCENTERNAMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FADDRESS
        {
            get
            {
                return _FADDRESS;
            }
            set
            {
                OnFADDRESSChanging(value);
                ReportPropertyChanging("FADDRESS");
                _FADDRESS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FADDRESS");
                OnFADDRESSChanged();
            }
        }
        private global::System.String _FADDRESS;
        partial void OnFADDRESSChanging(global::System.String value);
        partial void OnFADDRESSChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FLINKMAN
        {
            get
            {
                return _FLINKMAN;
            }
            set
            {
                OnFLINKMANChanging(value);
                ReportPropertyChanging("FLINKMAN");
                _FLINKMAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FLINKMAN");
                OnFLINKMANChanged();
            }
        }
        private global::System.String _FLINKMAN;
        partial void OnFLINKMANChanging(global::System.String value);
        partial void OnFLINKMANChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FLINKTEL
        {
            get
            {
                return _FLINKTEL;
            }
            set
            {
                OnFLINKTELChanging(value);
                ReportPropertyChanging("FLINKTEL");
                _FLINKTEL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FLINKTEL");
                OnFLINKTELChanged();
            }
        }
        private global::System.String _FLINKTEL;
        partial void OnFLINKTELChanging(global::System.String value);
        partial void OnFLINKTELChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFAX
        {
            get
            {
                return _FFAX;
            }
            set
            {
                OnFFAXChanging(value);
                ReportPropertyChanging("FFAX");
                _FFAX = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFAX");
                OnFFAXChanged();
            }
        }
        private global::System.String _FFAX;
        partial void OnFFAXChanging(global::System.String value);
        partial void OnFFAXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FEMAIL
        {
            get
            {
                return _FEMAIL;
            }
            set
            {
                OnFEMAILChanging(value);
                ReportPropertyChanging("FEMAIL");
                _FEMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FEMAIL");
                OnFEMAILChanged();
            }
        }
        private global::System.String _FEMAIL;
        partial void OnFEMAILChanging(global::System.String value);
        partial void OnFEMAILChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FWEBSITE
        {
            get
            {
                return _FWEBSITE;
            }
            set
            {
                OnFWEBSITEChanging(value);
                ReportPropertyChanging("FWEBSITE");
                _FWEBSITE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FWEBSITE");
                OnFWEBSITEChanged();
            }
        }
        private global::System.String _FWEBSITE;
        partial void OnFWEBSITEChanging(global::System.String value);
        partial void OnFWEBSITEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSTARTTIME
        {
            get
            {
                return _FSTARTTIME;
            }
            set
            {
                OnFSTARTTIMEChanging(value);
                ReportPropertyChanging("FSTARTTIME");
                _FSTARTTIME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSTARTTIME");
                OnFSTARTTIMEChanged();
            }
        }
        private global::System.String _FSTARTTIME;
        partial void OnFSTARTTIMEChanging(global::System.String value);
        partial void OnFSTARTTIMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FENDTIME
        {
            get
            {
                return _FENDTIME;
            }
            set
            {
                OnFENDTIMEChanging(value);
                ReportPropertyChanging("FENDTIME");
                _FENDTIME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FENDTIME");
                OnFENDTIMEChanged();
            }
        }
        private global::System.String _FENDTIME;
        partial void OnFENDTIMEChanging(global::System.String value);
        partial void OnFENDTIMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSTARTBIT
        {
            get
            {
                return _FSTARTBIT;
            }
            set
            {
                OnFSTARTBITChanging(value);
                ReportPropertyChanging("FSTARTBIT");
                _FSTARTBIT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSTARTBIT");
                OnFSTARTBITChanged();
            }
        }
        private global::System.String _FSTARTBIT;
        partial void OnFSTARTBITChanging(global::System.String value);
        partial void OnFSTARTBITChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FTAXREG
        {
            get
            {
                return _FTAXREG;
            }
            set
            {
                OnFTAXREGChanging(value);
                ReportPropertyChanging("FTAXREG");
                _FTAXREG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FTAXREG");
                OnFTAXREGChanged();
            }
        }
        private global::System.String _FTAXREG;
        partial void OnFTAXREGChanging(global::System.String value);
        partial void OnFTAXREGChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSYMBOL
        {
            get
            {
                return _FSYMBOL;
            }
            set
            {
                OnFSYMBOLChanging(value);
                ReportPropertyChanging("FSYMBOL");
                _FSYMBOL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSYMBOL");
                OnFSYMBOLChanged();
            }
        }
        private global::System.String _FSYMBOL;
        partial void OnFSYMBOLChanging(global::System.String value);
        partial void OnFSYMBOLChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSYMBOL1
        {
            get
            {
                return _FSYMBOL1;
            }
            set
            {
                OnFSYMBOL1Changing(value);
                ReportPropertyChanging("FSYMBOL1");
                _FSYMBOL1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSYMBOL1");
                OnFSYMBOL1Changed();
            }
        }
        private global::System.String _FSYMBOL1;
        partial void OnFSYMBOL1Changing(global::System.String value);
        partial void OnFSYMBOL1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FGUESTS
        {
            get
            {
                return _FGUESTS;
            }
            set
            {
                OnFGUESTSChanging(value);
                ReportPropertyChanging("FGUESTS");
                _FGUESTS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FGUESTS");
                OnFGUESTSChanged();
            }
        }
        private global::System.String _FGUESTS;
        partial void OnFGUESTSChanging(global::System.String value);
        partial void OnFGUESTSChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FWD_PEAKSTART
        {
            get
            {
                return _FWD_PEAKSTART;
            }
            set
            {
                OnFWD_PEAKSTARTChanging(value);
                ReportPropertyChanging("FWD_PEAKSTART");
                _FWD_PEAKSTART = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FWD_PEAKSTART");
                OnFWD_PEAKSTARTChanged();
            }
        }
        private Nullable<global::System.DateTime> _FWD_PEAKSTART;
        partial void OnFWD_PEAKSTARTChanging(Nullable<global::System.DateTime> value);
        partial void OnFWD_PEAKSTARTChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FWD_PEAKEND
        {
            get
            {
                return _FWD_PEAKEND;
            }
            set
            {
                OnFWD_PEAKENDChanging(value);
                ReportPropertyChanging("FWD_PEAKEND");
                _FWD_PEAKEND = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FWD_PEAKEND");
                OnFWD_PEAKENDChanged();
            }
        }
        private Nullable<global::System.DateTime> _FWD_PEAKEND;
        partial void OnFWD_PEAKENDChanging(Nullable<global::System.DateTime> value);
        partial void OnFWD_PEAKENDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FSAT_PEAKSTART
        {
            get
            {
                return _FSAT_PEAKSTART;
            }
            set
            {
                OnFSAT_PEAKSTARTChanging(value);
                ReportPropertyChanging("FSAT_PEAKSTART");
                _FSAT_PEAKSTART = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FSAT_PEAKSTART");
                OnFSAT_PEAKSTARTChanged();
            }
        }
        private Nullable<global::System.DateTime> _FSAT_PEAKSTART;
        partial void OnFSAT_PEAKSTARTChanging(Nullable<global::System.DateTime> value);
        partial void OnFSAT_PEAKSTARTChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FSAT_PEAKEND
        {
            get
            {
                return _FSAT_PEAKEND;
            }
            set
            {
                OnFSAT_PEAKENDChanging(value);
                ReportPropertyChanging("FSAT_PEAKEND");
                _FSAT_PEAKEND = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FSAT_PEAKEND");
                OnFSAT_PEAKENDChanged();
            }
        }
        private Nullable<global::System.DateTime> _FSAT_PEAKEND;
        partial void OnFSAT_PEAKENDChanging(Nullable<global::System.DateTime> value);
        partial void OnFSAT_PEAKENDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FH_PEAKSTART
        {
            get
            {
                return _FH_PEAKSTART;
            }
            set
            {
                OnFH_PEAKSTARTChanging(value);
                ReportPropertyChanging("FH_PEAKSTART");
                _FH_PEAKSTART = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FH_PEAKSTART");
                OnFH_PEAKSTARTChanged();
            }
        }
        private Nullable<global::System.DateTime> _FH_PEAKSTART;
        partial void OnFH_PEAKSTARTChanging(Nullable<global::System.DateTime> value);
        partial void OnFH_PEAKSTARTChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FH_PEAKEND
        {
            get
            {
                return _FH_PEAKEND;
            }
            set
            {
                OnFH_PEAKENDChanging(value);
                ReportPropertyChanging("FH_PEAKEND");
                _FH_PEAKEND = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FH_PEAKEND");
                OnFH_PEAKENDChanged();
            }
        }
        private Nullable<global::System.DateTime> _FH_PEAKEND;
        partial void OnFH_PEAKENDChanging(Nullable<global::System.DateTime> value);
        partial void OnFH_PEAKENDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FTAX
        {
            get
            {
                return _FTAX;
            }
            set
            {
                OnFTAXChanging(value);
                ReportPropertyChanging("FTAX");
                _FTAX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FTAX");
                OnFTAXChanged();
            }
        }
        private Nullable<global::System.Double> _FTAX;
        partial void OnFTAXChanging(Nullable<global::System.Double> value);
        partial void OnFTAXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FACTIVE
        {
            get
            {
                return _FACTIVE;
            }
            set
            {
                OnFACTIVEChanging(value);
                ReportPropertyChanging("FACTIVE");
                _FACTIVE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FACTIVE");
                OnFACTIVEChanged();
            }
        }
        private global::System.Decimal _FACTIVE;
        partial void OnFACTIVEChanging(global::System.Decimal value);
        partial void OnFACTIVEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FVERSION
        {
            get
            {
                return _FVERSION;
            }
            set
            {
                OnFVERSIONChanging(value);
                ReportPropertyChanging("FVERSION");
                _FVERSION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FVERSION");
                OnFVERSIONChanged();
            }
        }
        private global::System.String _FVERSION;
        partial void OnFVERSIONChanging(global::System.String value);
        partial void OnFVERSIONChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSHORTFORM
        {
            get
            {
                return _FSHORTFORM;
            }
            set
            {
                OnFSHORTFORMChanging(value);
                ReportPropertyChanging("FSHORTFORM");
                _FSHORTFORM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSHORTFORM");
                OnFSHORTFORMChanged();
            }
        }
        private global::System.String _FSHORTFORM;
        partial void OnFSHORTFORMChanging(global::System.String value);
        partial void OnFSHORTFORMChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TEMPLOYEEINFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TEMPLOYEEINFO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TEMPLOYEEINFO 对象。
        /// </summary>
        /// <param name="fEMPLOYEE">FEMPLOYEE 属性的初始值。</param>
        /// <param name="fGROUP">FGROUP 属性的初始值。</param>
        /// <param name="fROLEID">FROLEID 属性的初始值。</param>
        public static TEMPLOYEEINFO CreateTEMPLOYEEINFO(global::System.String fEMPLOYEE, global::System.String fGROUP, global::System.Int32 fROLEID)
        {
            TEMPLOYEEINFO tEMPLOYEEINFO = new TEMPLOYEEINFO();
            tEMPLOYEEINFO.FEMPLOYEE = fEMPLOYEE;
            tEMPLOYEEINFO.FGROUP = fGROUP;
            tEMPLOYEEINFO.FROLEID = fROLEID;
            return tEMPLOYEEINFO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FEMPLOYEE
        {
            get
            {
                return _FEMPLOYEE;
            }
            set
            {
                if (_FEMPLOYEE != value)
                {
                    OnFEMPLOYEEChanging(value);
                    ReportPropertyChanging("FEMPLOYEE");
                    _FEMPLOYEE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FEMPLOYEE");
                    OnFEMPLOYEEChanged();
                }
            }
        }
        private global::System.String _FEMPLOYEE;
        partial void OnFEMPLOYEEChanging(global::System.String value);
        partial void OnFEMPLOYEEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FID
        {
            get
            {
                return _FID;
            }
            set
            {
                OnFIDChanging(value);
                ReportPropertyChanging("FID");
                _FID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FID");
                OnFIDChanged();
            }
        }
        private global::System.String _FID;
        partial void OnFIDChanging(global::System.String value);
        partial void OnFIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FNAME
        {
            get
            {
                return _FNAME;
            }
            set
            {
                OnFNAMEChanging(value);
                ReportPropertyChanging("FNAME");
                _FNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FNAME");
                OnFNAMEChanged();
            }
        }
        private global::System.String _FNAME;
        partial void OnFNAMEChanging(global::System.String value);
        partial void OnFNAMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSEX
        {
            get
            {
                return _FSEX;
            }
            set
            {
                OnFSEXChanging(value);
                ReportPropertyChanging("FSEX");
                _FSEX = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSEX");
                OnFSEXChanged();
            }
        }
        private global::System.String _FSEX;
        partial void OnFSEXChanging(global::System.String value);
        partial void OnFSEXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FCONTACT
        {
            get
            {
                return _FCONTACT;
            }
            set
            {
                OnFCONTACTChanging(value);
                ReportPropertyChanging("FCONTACT");
                _FCONTACT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FCONTACT");
                OnFCONTACTChanged();
            }
        }
        private global::System.String _FCONTACT;
        partial void OnFCONTACTChanging(global::System.String value);
        partial void OnFCONTACTChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FEMAIL
        {
            get
            {
                return _FEMAIL;
            }
            set
            {
                OnFEMAILChanging(value);
                ReportPropertyChanging("FEMAIL");
                _FEMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FEMAIL");
                OnFEMAILChanged();
            }
        }
        private global::System.String _FEMAIL;
        partial void OnFEMAILChanging(global::System.String value);
        partial void OnFEMAILChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FPOPUP
        {
            get
            {
                return _FPOPUP;
            }
            set
            {
                OnFPOPUPChanging(value);
                ReportPropertyChanging("FPOPUP");
                _FPOPUP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FPOPUP");
                OnFPOPUPChanged();
            }
        }
        private global::System.String _FPOPUP;
        partial void OnFPOPUPChanging(global::System.String value);
        partial void OnFPOPUPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FCHKINMSG
        {
            get
            {
                return _FCHKINMSG;
            }
            set
            {
                OnFCHKINMSGChanging(value);
                ReportPropertyChanging("FCHKINMSG");
                _FCHKINMSG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FCHKINMSG");
                OnFCHKINMSGChanged();
            }
        }
        private global::System.String _FCHKINMSG;
        partial void OnFCHKINMSGChanging(global::System.String value);
        partial void OnFCHKINMSGChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FLASTACCESS
        {
            get
            {
                return _FLASTACCESS;
            }
            set
            {
                OnFLASTACCESSChanging(value);
                ReportPropertyChanging("FLASTACCESS");
                _FLASTACCESS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FLASTACCESS");
                OnFLASTACCESSChanged();
            }
        }
        private global::System.String _FLASTACCESS;
        partial void OnFLASTACCESSChanging(global::System.String value);
        partial void OnFLASTACCESSChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FSTATUS
        {
            get
            {
                return _FSTATUS;
            }
            set
            {
                OnFSTATUSChanging(value);
                ReportPropertyChanging("FSTATUS");
                _FSTATUS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FSTATUS");
                OnFSTATUSChanged();
            }
        }
        private Nullable<global::System.Int32> _FSTATUS;
        partial void OnFSTATUSChanging(Nullable<global::System.Int32> value);
        partial void OnFSTATUSChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FUSERLEVEL
        {
            get
            {
                return _FUSERLEVEL;
            }
            set
            {
                OnFUSERLEVELChanging(value);
                ReportPropertyChanging("FUSERLEVEL");
                _FUSERLEVEL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FUSERLEVEL");
                OnFUSERLEVELChanged();
            }
        }
        private Nullable<global::System.Int32> _FUSERLEVEL;
        partial void OnFUSERLEVELChanging(Nullable<global::System.Int32> value);
        partial void OnFUSERLEVELChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FPASSWORD
        {
            get
            {
                return _FPASSWORD;
            }
            set
            {
                OnFPASSWORDChanging(value);
                ReportPropertyChanging("FPASSWORD");
                _FPASSWORD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FPASSWORD");
                OnFPASSWORDChanged();
            }
        }
        private global::System.String _FPASSWORD;
        partial void OnFPASSWORDChanging(global::System.String value);
        partial void OnFPASSWORDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSECOND_PWD
        {
            get
            {
                return _FSECOND_PWD;
            }
            set
            {
                OnFSECOND_PWDChanging(value);
                ReportPropertyChanging("FSECOND_PWD");
                _FSECOND_PWD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSECOND_PWD");
                OnFSECOND_PWDChanged();
            }
        }
        private global::System.String _FSECOND_PWD;
        partial void OnFSECOND_PWDChanging(global::System.String value);
        partial void OnFSECOND_PWDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FGROUP
        {
            get
            {
                return _FGROUP;
            }
            set
            {
                OnFGROUPChanging(value);
                ReportPropertyChanging("FGROUP");
                _FGROUP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FGROUP");
                OnFGROUPChanged();
            }
        }
        private global::System.String _FGROUP;
        partial void OnFGROUPChanging(global::System.String value);
        partial void OnFGROUPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FROLEID
        {
            get
            {
                return _FROLEID;
            }
            set
            {
                OnFROLEIDChanging(value);
                ReportPropertyChanging("FROLEID");
                _FROLEID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FROLEID");
                OnFROLEIDChanged();
            }
        }
        private global::System.Int32 _FROLEID;
        partial void OnFROLEIDChanging(global::System.Int32 value);
        partial void OnFROLEIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISUSER
        {
            get
            {
                return _ISUSER;
            }
            set
            {
                OnISUSERChanging(value);
                ReportPropertyChanging("ISUSER");
                _ISUSER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISUSER");
                OnISUSERChanged();
            }
        }
        private Nullable<global::System.Int32> _ISUSER;
        partial void OnISUSERChanging(Nullable<global::System.Int32> value);
        partial void OnISUSERChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FATRAINER
        {
            get
            {
                return _FATRAINER;
            }
            set
            {
                OnFATRAINERChanging(value);
                ReportPropertyChanging("FATRAINER");
                _FATRAINER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FATRAINER");
                OnFATRAINERChanged();
            }
        }
        private Nullable<global::System.Int32> _FATRAINER;
        partial void OnFATRAINERChanging(Nullable<global::System.Int32> value);
        partial void OnFATRAINERChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FSTRAINER
        {
            get
            {
                return _FSTRAINER;
            }
            set
            {
                OnFSTRAINERChanging(value);
                ReportPropertyChanging("FSTRAINER");
                _FSTRAINER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FSTRAINER");
                OnFSTRAINERChanged();
            }
        }
        private Nullable<global::System.Int32> _FSTRAINER;
        partial void OnFSTRAINERChanging(Nullable<global::System.Int32> value);
        partial void OnFSTRAINERChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FWTRAINER
        {
            get
            {
                return _FWTRAINER;
            }
            set
            {
                OnFWTRAINERChanging(value);
                ReportPropertyChanging("FWTRAINER");
                _FWTRAINER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FWTRAINER");
                OnFWTRAINERChanged();
            }
        }
        private Nullable<global::System.Int32> _FWTRAINER;
        partial void OnFWTRAINERChanging(Nullable<global::System.Int32> value);
        partial void OnFWTRAINERChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSNAME
        {
            get
            {
                return _FSNAME;
            }
            set
            {
                OnFSNAMEChanging(value);
                ReportPropertyChanging("FSNAME");
                _FSNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSNAME");
                OnFSNAMEChanged();
            }
        }
        private global::System.String _FSNAME;
        partial void OnFSNAMEChanging(global::System.String value);
        partial void OnFSNAMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FCENTER
        {
            get
            {
                return _FCENTER;
            }
            set
            {
                OnFCENTERChanging(value);
                ReportPropertyChanging("FCENTER");
                _FCENTER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FCENTER");
                OnFCENTERChanged();
            }
        }
        private global::System.String _FCENTER;
        partial void OnFCENTERChanging(global::System.String value);
        partial void OnFCENTERChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FCOMMTYPE
        {
            get
            {
                return _FCOMMTYPE;
            }
            set
            {
                OnFCOMMTYPEChanging(value);
                ReportPropertyChanging("FCOMMTYPE");
                _FCOMMTYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FCOMMTYPE");
                OnFCOMMTYPEChanged();
            }
        }
        private global::System.String _FCOMMTYPE;
        partial void OnFCOMMTYPEChanging(global::System.String value);
        partial void OnFCOMMTYPEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FBLISTREMARK
        {
            get
            {
                return _FBLISTREMARK;
            }
            set
            {
                OnFBLISTREMARKChanging(value);
                ReportPropertyChanging("FBLISTREMARK");
                _FBLISTREMARK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FBLISTREMARK");
                OnFBLISTREMARKChanged();
            }
        }
        private global::System.String _FBLISTREMARK;
        partial void OnFBLISTREMARKChanging(global::System.String value);
        partial void OnFBLISTREMARKChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FBLISTDATE
        {
            get
            {
                return _FBLISTDATE;
            }
            set
            {
                OnFBLISTDATEChanging(value);
                ReportPropertyChanging("FBLISTDATE");
                _FBLISTDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FBLISTDATE");
                OnFBLISTDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _FBLISTDATE;
        partial void OnFBLISTDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnFBLISTDATEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FPREPAREDBY
        {
            get
            {
                return _FPREPAREDBY;
            }
            set
            {
                OnFPREPAREDBYChanging(value);
                ReportPropertyChanging("FPREPAREDBY");
                _FPREPAREDBY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FPREPAREDBY");
                OnFPREPAREDBYChanged();
            }
        }
        private global::System.String _FPREPAREDBY;
        partial void OnFPREPAREDBYChanging(global::System.String value);
        partial void OnFPREPAREDBYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FINDATE
        {
            get
            {
                return _FINDATE;
            }
            set
            {
                OnFINDATEChanging(value);
                ReportPropertyChanging("FINDATE");
                _FINDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FINDATE");
                OnFINDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _FINDATE;
        partial void OnFINDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnFINDATEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FOUTDATE
        {
            get
            {
                return _FOUTDATE;
            }
            set
            {
                OnFOUTDATEChanging(value);
                ReportPropertyChanging("FOUTDATE");
                _FOUTDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FOUTDATE");
                OnFOUTDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _FOUTDATE;
        partial void OnFOUTDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnFOUTDATEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FPTPLAN
        {
            get
            {
                return _FPTPLAN;
            }
            set
            {
                OnFPTPLANChanging(value);
                ReportPropertyChanging("FPTPLAN");
                _FPTPLAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FPTPLAN");
                OnFPTPLANChanged();
            }
        }
        private global::System.String _FPTPLAN;
        partial void OnFPTPLANChanging(global::System.String value);
        partial void OnFPTPLANChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] FIMAGE
        {
            get
            {
                return StructuralObject.GetValidValue(_FIMAGE);
            }
            set
            {
                OnFIMAGEChanging(value);
                ReportPropertyChanging("FIMAGE");
                _FIMAGE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIMAGE");
                OnFIMAGEChanged();
            }
        }
        private global::System.Byte[] _FIMAGE;
        partial void OnFIMAGEChanging(global::System.Byte[] value);
        partial void OnFIMAGEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FCHECKOUTED
        {
            get
            {
                return _FCHECKOUTED;
            }
            set
            {
                OnFCHECKOUTEDChanging(value);
                ReportPropertyChanging("FCHECKOUTED");
                _FCHECKOUTED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FCHECKOUTED");
                OnFCHECKOUTEDChanged();
            }
        }
        private Nullable<global::System.Int32> _FCHECKOUTED;
        partial void OnFCHECKOUTEDChanging(Nullable<global::System.Int32> value);
        partial void OnFCHECKOUTEDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FTYPE
        {
            get
            {
                return _FTYPE;
            }
            set
            {
                OnFTYPEChanging(value);
                ReportPropertyChanging("FTYPE");
                _FTYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FTYPE");
                OnFTYPEChanged();
            }
        }
        private global::System.String _FTYPE;
        partial void OnFTYPEChanging(global::System.String value);
        partial void OnFTYPEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FANNUAL_LEAVE
        {
            get
            {
                return _FANNUAL_LEAVE;
            }
            set
            {
                OnFANNUAL_LEAVEChanging(value);
                ReportPropertyChanging("FANNUAL_LEAVE");
                _FANNUAL_LEAVE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FANNUAL_LEAVE");
                OnFANNUAL_LEAVEChanged();
            }
        }
        private global::System.String _FANNUAL_LEAVE;
        partial void OnFANNUAL_LEAVEChanging(global::System.String value);
        partial void OnFANNUAL_LEAVEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFULL_TIME
        {
            get
            {
                return _FFULL_TIME;
            }
            set
            {
                OnFFULL_TIMEChanging(value);
                ReportPropertyChanging("FFULL_TIME");
                _FFULL_TIME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFULL_TIME");
                OnFFULL_TIMEChanged();
            }
        }
        private global::System.String _FFULL_TIME;
        partial void OnFFULL_TIMEChanging(global::System.String value);
        partial void OnFFULL_TIMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SHIFT
        {
            get
            {
                return _SHIFT;
            }
            set
            {
                OnSHIFTChanging(value);
                ReportPropertyChanging("SHIFT");
                _SHIFT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SHIFT");
                OnSHIFTChanged();
            }
        }
        private global::System.String _SHIFT;
        partial void OnSHIFTChanging(global::System.String value);
        partial void OnSHIFTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TIPLIST")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TIPLIST : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TIPLIST 对象。
        /// </summary>
        /// <param name="fID">FID 属性的初始值。</param>
        public static TIPLIST CreateTIPLIST(global::System.Int32 fID)
        {
            TIPLIST tIPLIST = new TIPLIST();
            tIPLIST.FID = fID;
            return tIPLIST;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FID
        {
            get
            {
                return _FID;
            }
            set
            {
                if (_FID != value)
                {
                    OnFIDChanging(value);
                    ReportPropertyChanging("FID");
                    _FID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FID");
                    OnFIDChanged();
                }
            }
        }
        private global::System.Int32 _FID;
        partial void OnFIDChanging(global::System.Int32 value);
        partial void OnFIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIP
        {
            get
            {
                return _FIP;
            }
            set
            {
                OnFIPChanging(value);
                ReportPropertyChanging("FIP");
                _FIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIP");
                OnFIPChanged();
            }
        }
        private global::System.String _FIP;
        partial void OnFIPChanging(global::System.String value);
        partial void OnFIPChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TSYSTEMCONTROL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TSYSTEMCONTROL : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TSYSTEMCONTROL 对象。
        /// </summary>
        /// <param name="fID">FID 属性的初始值。</param>
        public static TSYSTEMCONTROL CreateTSYSTEMCONTROL(global::System.Int32 fID)
        {
            TSYSTEMCONTROL tSYSTEMCONTROL = new TSYSTEMCONTROL();
            tSYSTEMCONTROL.FID = fID;
            return tSYSTEMCONTROL;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FEMPLOYEE
        {
            get
            {
                return _FEMPLOYEE;
            }
            set
            {
                OnFEMPLOYEEChanging(value);
                ReportPropertyChanging("FEMPLOYEE");
                _FEMPLOYEE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FEMPLOYEE");
                OnFEMPLOYEEChanged();
            }
        }
        private global::System.String _FEMPLOYEE;
        partial void OnFEMPLOYEEChanging(global::System.String value);
        partial void OnFEMPLOYEEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSYSTEM
        {
            get
            {
                return _FSYSTEM;
            }
            set
            {
                OnFSYSTEMChanging(value);
                ReportPropertyChanging("FSYSTEM");
                _FSYSTEM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSYSTEM");
                OnFSYSTEMChanged();
            }
        }
        private global::System.String _FSYSTEM;
        partial void OnFSYSTEMChanging(global::System.String value);
        partial void OnFSYSTEMChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FID
        {
            get
            {
                return _FID;
            }
            set
            {
                if (_FID != value)
                {
                    OnFIDChanging(value);
                    ReportPropertyChanging("FID");
                    _FID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FID");
                    OnFIDChanged();
                }
            }
        }
        private global::System.Int32 _FID;
        partial void OnFIDChanging(global::System.Int32 value);
        partial void OnFIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TSYSTEMINFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TSYSTEMINFO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TSYSTEMINFO 对象。
        /// </summary>
        /// <param name="fSYSTEMNAME">FSYSTEMNAME 属性的初始值。</param>
        /// <param name="fID">FID 属性的初始值。</param>
        public static TSYSTEMINFO CreateTSYSTEMINFO(global::System.String fSYSTEMNAME, global::System.Int32 fID)
        {
            TSYSTEMINFO tSYSTEMINFO = new TSYSTEMINFO();
            tSYSTEMINFO.FSYSTEMNAME = fSYSTEMNAME;
            tSYSTEMINFO.FID = fID;
            return tSYSTEMINFO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FSYSTEMNAME
        {
            get
            {
                return _FSYSTEMNAME;
            }
            set
            {
                OnFSYSTEMNAMEChanging(value);
                ReportPropertyChanging("FSYSTEMNAME");
                _FSYSTEMNAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FSYSTEMNAME");
                OnFSYSTEMNAMEChanged();
            }
        }
        private global::System.String _FSYSTEMNAME;
        partial void OnFSYSTEMNAMEChanging(global::System.String value);
        partial void OnFSYSTEMNAMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FID
        {
            get
            {
                return _FID;
            }
            set
            {
                if (_FID != value)
                {
                    OnFIDChanging(value);
                    ReportPropertyChanging("FID");
                    _FID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FID");
                    OnFIDChanged();
                }
            }
        }
        private global::System.Int32 _FID;
        partial void OnFIDChanging(global::System.Int32 value);
        partial void OnFIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="physical_SSOModel", Name="TUSERGROUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TUSERGROUP : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TUSERGROUP 对象。
        /// </summary>
        /// <param name="fCODE">FCODE 属性的初始值。</param>
        /// <param name="fDESC">FDESC 属性的初始值。</param>
        /// <param name="fPTGROUP">FPTGROUP 属性的初始值。</param>
        public static TUSERGROUP CreateTUSERGROUP(global::System.String fCODE, global::System.String fDESC, global::System.Int32 fPTGROUP)
        {
            TUSERGROUP tUSERGROUP = new TUSERGROUP();
            tUSERGROUP.FCODE = fCODE;
            tUSERGROUP.FDESC = fDESC;
            tUSERGROUP.FPTGROUP = fPTGROUP;
            return tUSERGROUP;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FCODE
        {
            get
            {
                return _FCODE;
            }
            set
            {
                if (_FCODE != value)
                {
                    OnFCODEChanging(value);
                    ReportPropertyChanging("FCODE");
                    _FCODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FCODE");
                    OnFCODEChanged();
                }
            }
        }
        private global::System.String _FCODE;
        partial void OnFCODEChanging(global::System.String value);
        partial void OnFCODEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FDESC
        {
            get
            {
                return _FDESC;
            }
            set
            {
                if (_FDESC != value)
                {
                    OnFDESCChanging(value);
                    ReportPropertyChanging("FDESC");
                    _FDESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FDESC");
                    OnFDESCChanged();
                }
            }
        }
        private global::System.String _FDESC;
        partial void OnFDESCChanging(global::System.String value);
        partial void OnFDESCChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FPTGROUP
        {
            get
            {
                return _FPTGROUP;
            }
            set
            {
                if (_FPTGROUP != value)
                {
                    OnFPTGROUPChanging(value);
                    ReportPropertyChanging("FPTGROUP");
                    _FPTGROUP = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FPTGROUP");
                    OnFPTGROUPChanged();
                }
            }
        }
        private global::System.Int32 _FPTGROUP;
        partial void OnFPTGROUPChanging(global::System.Int32 value);
        partial void OnFPTGROUPChanged();

        #endregion

    
    }

    #endregion

    
}
